services:
    app:
        build: .
        image: deepgi-local/backend 
        ports:
            - 5000:5000
        container_name: "deepgi_backend"
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - .:/app
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:5000/hello"]
            interval: 10s
            timeout: 5s
            retries: 3

        # deploy:
        #     resources:
        #         reservations:
        #             devices:
        #             -   driver: nvidia
        #                 count: 1 # turn on gpu by count: 1 / turn off gpu by count: 0
        #                 capabilities:
        #                 - gpu
        #                 - utility # nvidia-smi
        #                 - compute # CUDA
        #                 - video   # N
    db:
        image: "mysql"
        ports:
            - 3306:3306
        container_name: "deepgi_database"
        environment:
            - MYSQL_DATABASE=deepgi
            - MYSQL_ROOT_PASSWORD=abcdefg
        volumes:
            - ./mysql:/var/lib/mysql
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            interval: 10s
            timeout: 5s
            retries: 3

    worker:
        image: deepgi-local/backend
        container_name: "deepgi_worker"
        command: celery -A deepgi worker -l info -P gevent
        volumes:
            - .:/app
        depends_on:
            - app
            - db
        networks:
            - backend
        # deploy:
        #     resources:
        #         reservations:
        #             devices:
        #             -   driver: nvidia
        #                 count: 1 # turn on gpu by count: 1 / turn off gpu by count: 0
        #                 capabilities:
        #                 - gpu
        #                 - utility # nvidia-smi
        #                 - compute # CUDA
        #                 - video   # N
    broker:
        image: redis:alpine
        ports:
            - 6379:6379
        container_name: "deepgi_broker"
        networks:
            - backend
    
    streaming_server:
        image: deepgi-local/backend
        command: python3 streaming_server/streaming_server.py
        container_name: "deepgi_streaming_server"
        network_mode: host
        depends_on:
            app:
                condition: service_healthy
        # deploy:
        #     resources:
        #         reservations:
        #             devices:
        #             -   driver: nvidia
        #                 count: 1 # turn on gpu by count: 1 / turn off gpu by count: 0
        #                 capabilities:
        #                 - gpu
        #                 - utility # nvidia-smi
        #                 - compute # CUDA
        #                 - video   # N

networks:
    backend:
